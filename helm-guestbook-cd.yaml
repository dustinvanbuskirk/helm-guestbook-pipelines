version: '1.0'
kind: pipeline
metadata:
  name: argo-helm-guestbook/helm-guestbook-cd
  project: argo-helm-guestbook
  projectId: 618eaeb794abf9a4e4baf39b
  revision: 90
  accountId: 5a3a2a445518610001637c87
  created_at: '2021-11-12T19:19:08.843Z'
  updated_at: '2021-11-16T02:56:18.475Z'
  shortName: helm-guestbook-cd
  deprecate: {}
  labels:
    tags: []
  originalYamlString: |-
    version: "1.0"
    stages:
      - clone
      - get-app-data
      - canary
      - verification
      - finalize
      - approval
      - finalize
      - promote
    steps:
      CloneHelmChartRepository:
        title: Cloning GIT Repository
        type: git-clone
        arguments:
          repo: dustinvanbuskirk/helm-guestbook
          git: github-dustin
          revision: main
        stage: clone
      ParseApplicationData:
        image: mikefarah/yq:4
        working_directory: ${{CloneHelmChartRepository}}/applications/${{APPLICATION}}/${{ENVIRONMENT}}
        commands:
          - cf_export ARGO_APPLICATION_NAME=$(yq e '.metadata.name' application.yaml)
        stage: get-app-data
      StartCanary:
        title: Sync ArgoCD App
        type: argocd-sync
        arguments:
          context: sales-dev-aks
          app_name: ${{ARGO_APPLICATION_NAME}}
          additional_flags: '--loglevel debug --timeout 1200 --grpc-web --values ../applications/${{APPLICATION}}/${{ENVIRONMENT}}/values.yaml'
          wait_for_suspend: true
        stage: canary
      VerificationTests:
        image: alpine
        commands:
          - ls
        stage: verification
      FinalizeCanary:
        title: Finalizing Canary
        type: argocd-rollout
        arguments:
          k8s_context: sales-dev-aks
          rollout_name: ${{APPLICATION}}-${{ENVIRONMENT}}
          rollout_namespace: ${{ENVIRONMENT}}
          context: sales-dev-aks
          app_name: ${{ARGO_APPLICATION_NAME}}
          wait_healthy: true
          additional_flags_for_wait_cmd: --grpc-web
        stage: finalize
      Approval:
        type: pending-approval
        title: Wait for approval...
        stage: approval
        timeout:
          duration: 2
          finalState: denied
          timeUnit: hours
        when:
          condition:
            all:
              whenEnvironmentDev: 'includes("${{ENVIRONMENT}}", "dev") == true'
      UpdateValuesFile:
        title: Update values.yaml
        image: mikefarah/yq:3
        working_directory: ${{CloneHelmChartRepository}}
        commands:
          - yq w -i applications/${{APPLICATION}}/prod/values.yaml image.tag $(yq r applications/${{APPLICATION}}/dev/values.yaml image.tag)
          - cat applications/${{APPLICATION}}/prod/values.yaml
        stage: promote
        when:
          condition:
            all:
              whenEnvironmentDev: 'includes("${{ENVIRONMENT}}", "dev") == true'
      GITCommitPush:
        title: Commit values.yaml
        type: git-commit
        arguments:
          repo: dustinvanbuskirk/helm-guestbook
          git: github-dustin
          working_directory: /codefresh/volume/helm-guestbook
          commit_message: Updated Values
          git_user_name: ${{CF_COMMIT_AUTHOR}}
          git_user_email: ${{CF_COMMIT_AUTHOR}}@codefresh.io
        stage: promote
        when:
          condition:
            all:
              whenEnvironmentDev: 'includes("${{ENVIRONMENT}}", "dev") == true'
  id: 618ebe2cb0da95653c103da5
spec:
  triggers:
    - name: helm-guestbook-b-dev
      type: git
      repo: dustinvanbuskirk/helm-guestbook
      events:
        - push.heads
      pullRequestAllowForkEvents: false
      commentRegex: /.*/gi
      branchRegex: /main/gi
      branchRegexInput: regex
      modifiedFilesGlob: applications/helm-guestbook-b/dev/values.yaml
      provider: github
      disabled: false
      options:
        noCache: false
        noCfCache: false
        resetVolume: false
      verified: true
      context: github-dustin
      contexts: []
      variables:
        - key: APPLICATION
          value: helm-guestbook-b
        - key: ENVIRONMENT
          value: dev
      status: verified
      lastExecutionDate: '2021-11-16T01:27:23.405Z'
      id: 6192d099bcc77867e958aaa2
      endpoint: 'https://g.codefresh.io/api/providers/github/hook/qMmkHbgOhz'
      secret: ####################
    - name: helm-guestbook-b-prod
      type: git
      repo: dustinvanbuskirk/helm-guestbook
      events:
        - push.heads
      pullRequestAllowForkEvents: false
      commentRegex: /.*/gi
      branchRegex: /main/gi
      branchRegexInput: regex
      modifiedFilesGlob: applications/helm-guestbook-b/prod/values.yaml
      provider: github
      disabled: false
      options:
        noCache: false
        noCfCache: false
        resetVolume: false
      verified: true
      context: github-dustin
      contexts: []
      variables:
        - key: APPLICATION
          value: helm-guestbook-b
        - key: ENVIRONMENT
          value: prod
      status: verified
      lastExecutionDate: '2021-11-15T23:47:28.348Z'
      id: 6192d0deb0da954bba103f5a
      endpoint: 'https://g.codefresh.io/api/providers/github/hook/qMmkHbgOhz'
      secret: ####################
    - name: helm-guestbook-a-prod
      type: git
      repo: dustinvanbuskirk/helm-guestbook
      events:
        - push.heads
      pullRequestAllowForkEvents: false
      commentRegex: /.*/gi
      branchRegex: /main/gi
      branchRegexInput: regex
      modifiedFilesGlob: applications/helm-guestbook-a/prod/values.yaml
      provider: github
      disabled: false
      options:
        noCache: false
        noCfCache: false
        resetVolume: false
      verified: true
      context: github-dustin
      contexts: []
      variables:
        - key: APPLICATION
          value: helm-guestbook-a
        - key: ENVIRONMENT
          value: prod
      status: verified
      lastExecutionDate: '2021-11-16T02:37:23.076Z'
      id: 6192d18bb0da957696103f5b
      endpoint: 'https://g.codefresh.io/api/providers/github/hook/qMmkHbgOhz'
      secret: ####################
    - name: helm-guestbook-a-dev
      type: git
      repo: dustinvanbuskirk/helm-guestbook
      events:
        - push.heads
      pullRequestAllowForkEvents: false
      commentRegex: /.*/gi
      branchRegex: /main/gi
      branchRegexInput: regex
      modifiedFilesGlob: applications/helm-guestbook-a/dev/values.yaml
      provider: github
      disabled: false
      options:
        noCache: false
        noCfCache: false
        resetVolume: false
      verified: true
      context: github-dustin
      contexts: []
      variables:
        - key: APPLICATION
          value: helm-guestbook-a
        - key: ENVIRONMENT
          value: dev
      status: verified
      lastExecutionDate: '2021-11-16T02:35:54.336Z'
      id: 6192d1cc742b8e7539ffeb57
      endpoint: 'https://g.codefresh.io/api/providers/github/hook/qMmkHbgOhz'
      secret: ####################
  stages:
    - clone
    - get-app-data
    - canary
    - verification
    - finalize
    - approval
    - finalize
    - promote
  variables:
    - key: ARGO_CONTEXT
      value: argocd-aks-sales-dev
      encrypted: false
    - key: K8S_CONTEXT
      value: sales-dev-aks
      encrypted: false
  contexts: []
  runtimeEnvironment:
    name: sales-dev-aks/codefresh
    cpu: 1000m
    memory: 1024Mi
    dindStorage: nullGi
  terminationPolicy: []
  externalResources: []
  debug:
    steps:
      VerificationTests:
        phases:
          before: false
          override: true
          after: false
  steps:
    CloneHelmChartRepository:
      title: Cloning GIT Repository
      type: git-clone
      arguments:
        repo: dustinvanbuskirk/helm-guestbook
        git: github-dustin
        revision: main
      stage: clone
    ParseApplicationData:
      image: 'mikefarah/yq:4'
      working_directory: >-
        ${{CloneHelmChartRepository}}/applications/${{APPLICATION}}/${{ENVIRONMENT}}
      commands:
        - >-
          cf_export ARGO_APPLICATION_NAME=$(yq e '.metadata.name'
          application.yaml)
      stage: get-app-data
    StartCanary:
      title: Sync ArgoCD App
      type: argocd-sync
      arguments:
        context: sales-dev-aks
        app_name: '${{ARGO_APPLICATION_NAME}}'
        additional_flags: >-
          --loglevel debug --timeout 1200 --grpc-web --values
          ../applications/${{APPLICATION}}/${{ENVIRONMENT}}/values.yaml
        wait_for_suspend: true
      stage: canary
    VerificationTests:
      image: alpine
      commands:
        - ls
      stage: verification
    FinalizeCanary:
      title: Finalizing Canary
      type: argocd-rollout
      arguments:
        k8s_context: sales-dev-aks
        rollout_name: '${{APPLICATION}}-${{ENVIRONMENT}}'
        rollout_namespace: '${{ENVIRONMENT}}'
        context: sales-dev-aks
        app_name: '${{ARGO_APPLICATION_NAME}}'
        wait_healthy: true
        additional_flags_for_wait_cmd: '--grpc-web'
      stage: finalize
    Approval:
      type: pending-approval
      title: Wait for approval...
      stage: approval
      timeout:
        duration: 2
        finalState: denied
        timeUnit: hours
      when:
        condition:
          all:
            whenEnvironmentDev: 'includes("${{ENVIRONMENT}}", "dev") == true'
    UpdateValuesFile:
      title: Update values.yaml
      image: 'mikefarah/yq:3'
      working_directory: '${{CloneHelmChartRepository}}'
      commands:
        - >-
          yq w -i applications/${{APPLICATION}}/prod/values.yaml image.tag $(yq
          r applications/${{APPLICATION}}/dev/values.yaml image.tag)
        - 'cat applications/${{APPLICATION}}/prod/values.yaml'
      stage: promote
      when:
        condition:
          all:
            whenEnvironmentDev: 'includes("${{ENVIRONMENT}}", "dev") == true'
    GITCommitPush:
      title: Commit values.yaml
      type: git-commit
      arguments:
        repo: dustinvanbuskirk/helm-guestbook
        git: github-dustin
        working_directory: /codefresh/volume/helm-guestbook
        commit_message: Updated Values
        git_user_name: '${{CF_COMMIT_AUTHOR}}'
        git_user_email: '${{CF_COMMIT_AUTHOR}}@codefresh.io'
      stage: promote
      when:
        condition:
          all:
            whenEnvironmentDev: 'includes("${{ENVIRONMENT}}", "dev") == true'

