version: '1.0'
kind: pipeline
metadata:
  name: argo-helm-guestbook/helm-guestbook-cd
  project: argo-helm-guestbook
  projectId: 618eaeb794abf9a4e4baf39b
  revision: 62
  accountId: 5a3a2a445518610001637c87
  created_at: '2021-11-12T19:19:08.843Z'
  updated_at: '2021-11-13T06:45:42.072Z'
  shortName: helm-guestbook-cd
  deprecate: {}
  labels:
    tags: []
  id: 618ebe2cb0da95653c103da5
spec:
  triggers:
    - name: helm-guestbook-a-dev
      type: git
      repo: dustinvanbuskirk/helm-guestbook-environments
      events:
        - push.heads
      pullRequestAllowForkEvents: false
      commentRegex: /.*/gi
      branchRegex: /main/gi
      branchRegexInput: regex
      modifiedFilesGlob: helm-guestbook-a/dev/values.yaml
      provider: github
      disabled: false
      options:
        noCache: false
        noCfCache: false
        resetVolume: false
      verified: true
      context: github-dustin
      contexts: []
      variables:
        - key: APPLICATION
          value: helm-guestbook-a
        - key: ENVIRONMENT
          value: dev
      lastExecutionDate: '2021-11-13T06:41:28.677Z'
      status: verified
      id: 618f3df3742b8edd90ffea11
      endpoint: 'https://g.codefresh.io/api/providers/github/hook/Ccg3N2leYx'
      secret: ##############
    - name: helm-guestbook-a-prod
      type: git
      repo: dustinvanbuskirk/helm-guestbook-environments
      events:
        - push.heads
      pullRequestAllowForkEvents: false
      commentRegex: /.*/gi
      branchRegex: /main/gi
      branchRegexInput: regex
      modifiedFilesGlob: helm-guestbook-a/prod/values.yaml
      provider: github
      disabled: false
      options:
        noCache: false
        noCfCache: false
        resetVolume: false
      verified: true
      context: github-dustin
      contexts: []
      variables:
        - key: APPLICATION
          value: helm-guestbook-a
        - key: ENVIRONMENT
          value: prod
      status: verified
      id: 618f3e22bcc7783e7e58a954
      endpoint: 'https://g.codefresh.io/api/providers/github/hook/Ccg3N2leYx'
      secret: ##############
    - name: helm-guestbook-b-dev
      type: git
      repo: dustinvanbuskirk/helm-guestbook-b
      events:
        - push.heads
      pullRequestAllowForkEvents: false
      commentRegex: /.*/gi
      branchRegex: /main/gi
      branchRegexInput: regex
      modifiedFilesGlob: helm-guestbook-b/dev/values.yaml
      provider: github
      disabled: false
      options:
        noCache: false
        noCfCache: false
        resetVolume: false
      verified: true
      context: github-dustin
      contexts: []
      variables:
        - key: APPLICATION
          value: helm-guestbook-a
        - key: ENVIRONMENT
          value: dev
      status: verified
      id: 618f3f1a9c76742c37ee5e86
      endpoint: 'https://g.codefresh.io/api/providers/github/hook/kir9XwywpO'
      secret: ##############
    - name: helm-guestbook-b-prod
      type: git
      repo: dustinvanbuskirk/helm-guestbook-environments
      events:
        - push.heads
      pullRequestAllowForkEvents: false
      commentRegex: /.*/gi
      branchRegex: /main/gi
      branchRegexInput: regex
      modifiedFilesGlob: helm-guestbook-b/prod/values.yaml
      provider: github
      disabled: false
      options:
        noCache: false
        noCfCache: false
        resetVolume: false
      verified: true
      context: github-dustin
      contexts: []
      variables:
        - key: APPLICATION
          value: helm-guestbook-b
        - key: ENVIRONMENT
          value: prod
      lastExecutionDate: '2021-11-13T04:37:13.453Z'
      status: verified
      id: 618f3f60742b8ebe18ffea12
      endpoint: 'https://g.codefresh.io/api/providers/github/hook/Ccg3N2leYx'
      secret: ##############
  stages:
    - clone
    - get-app-data
    - canary
    - verification
    - finalize
    - approval
    - finalize
    - promote
  variables:
    - key: ARGO_CONTEXT
      value: argocd-aks-sales-dev
      encrypted: false
    - key: K8S_CONTEXT
      value: sales-dev-aks
      encrypted: false
  contexts: []
  runtimeEnvironment:
    name: sales-dev-aks/codefresh
    cpu: 1000m
    memory: 1024Mi
    dindStorage: nullGi
  terminationPolicy: []
  externalResources: []
  steps:
    CloneEnvironmentsRepository:
      title: Cloning GIT Repository
      type: git-clone
      arguments:
        repo: dustinvanbuskirk/helm-guestbook-environments
        git: github-dustin
        revision: main
      stage: clone
    ParseApplicationData:
      image: 'mikefarah/yq:4'
      working_directory: '${{CloneEnvironmentsRepository}}/${{APPLICATION}}/${{ENVIRONMENT}}'
      commands:
        - >-
          cf_export ARGO_APPLICATION_NAME=$(yq e '.metadata.name'
          application.yaml)
      stage: get-app-data
    StartCanary:
      title: Sync Development ArgoCD App
      type: argocd-sync
      arguments:
        context: argocd-aks-sales-dev
        app_name: '${{ARGO_APPLICATION_NAME}}'
        additional_flags: >-
          --loglevel debug --timeout 1200 --grpc-web --values
          ./${{APPLICATION}}/${{ENVIRONMENT}}/values.yaml
        wait_for_suspend: true
      stage: canary
    VerificationTests:
      image: alpine
      command:
        - exit 0
      stage: verification
    FinalizeCanary:
      title: Finalizing Canary
      type: argocd-rollout
      arguments:
        k8s_context: sales-dev-aks
        rollout_name: '${{APPLICATION}}-${{ENVIRONMENT}}'
        rollout_namespace: '${{ENVIRONMENT}}'
        context: argocd-aks-sales-dev
        app_name: '${{ARGO_APPLICATION_NAME}}'
        wait_healthy: true
        additional_flags_for_wait_cmd: '--grpc-web'
      stage: finalize
    Approval:
      type: pending-approval
      title: Wait for approval...
      stage: approval
      when:
        condition:
          all:
            whenEnvironmentDev: 'includes("${{ENVIRONMENT}}", "dev") == true'
    UpdateValuesFile:
      title: Update values.yaml
      image: 'mikefarah/yq:3'
      working_directory: '${{CloneEnvironmentsRepository}}'
      commands:
        - >-
          yq w -i ${{CF_REPO_NAME}}/prod/values.yaml image.tag
          ${{CF_BRANCH_TAG_NORMALIZED}}-${{CF_SHORT_REVISION}}
        - 'cat ${{CF_REPO_NAME}}/prod/values.yaml'
      stage: promote
      when:
        condition:
          all:
            whenEnvironmentDev: 'includes("${{ENVIRONMENT}}", "dev") == true'
    GITCommitPush:
      title: Commit values.yaml
      type: git-commit
      arguments:
        repo: dustinvanbuskirk/helm-guestbook-environments
        git: github-dustin
        working_directory: /codefresh/volume/helm-guestbook-environments
        commit_message: Updated Values
        git_user_name: '${{CF_COMMIT_AUTHOR}}'
        git_user_email: '${{CF_COMMIT_AUTHOR}}@codefresh.io'
      stage: promote
      when:
        condition:
          all:
            whenEnvironmentDev: 'includes("${{ENVIRONMENT}}", "dev") == true'

